---
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	note: CollectionEntry<"note">;
	isPreview?: boolean | undefined;
};

const { as: Tag = "div", note, isPreview = false } = Astro.props;
const { Content } = await render(note);
const { pinned } = note.data;
---

<article
	class:list={[
		isPreview && "inline-grid w-full rounded-md px-4 py-3",
		isPreview &&
			(pinned
				? "border border-[#df8e1d] bg-[#e6e9ef] dark:border-[#f9e2af] dark:bg-[#313244]"
				: "bg-[#e6e9ef] dark:bg-[#313244]"),
	]}
	data-pagefind-body={isPreview ? false : true}
>
	<div class="mb-2 flex items-center justify-between">
		<FormattedDate
			dateTimeOptions={{
				hour: "2-digit",
				minute: "2-digit",
				year: "2-digit",
				month: "short",
				day: "2-digit",
			}}
			date={note.data.publishDate}
		/>
		{pinned && <span class="ml-2 text-sm font-medium">ðŸ“Œ</span>}
	</div>

	<div
		class="prose prose-sm prose-cactus mt-2 max-w-none [&>p:last-of-type]:mb-0"
		class:list={{ "line-clamp-6": isPreview && !pinned }}
	>
		<Content />
	</div>
</article>
